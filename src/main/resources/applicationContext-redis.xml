<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd   
      http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context.xsd   
      http://www.springframework.org/schema/aop   
      http://www.springframework.org/schema/aop/spring-aop.xsd   
      http://www.springframework.org/schema/tx   
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/cache  
      http://www.springframework.org/schema/cache/spring-cache.xsd
      http://www.springframework.org/schema/redis 
      http://www.springframework.org/schema/redis/spring-redis.xsd">

    <cache:annotation-driven cache-manager="duiaCacheManager" proxy-target-class="true"/>

    <bean id="duiaCacheManager" class="com.tssb.common.cache.DuiaRedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate"/>
        <constructor-arg index="1" name="usePrefix" value="true"/>
        <constructor-arg index="2" name="cacheNames">
            <list>
                <value>cacheSlow</value>
                <value>cacheNormal</value>
                <value>cacheFast</value>
            </list>
        </constructor-arg>
        <constructor-arg index="3" name="expires">
            <map>
                <entry key="cacheSlow">
                    <value>604800</value>
                </entry>
                <entry key="cacheNormal">
                    <value>86400</value>
                </entry>
                <entry key="cacheFast">
                    <value>3600</value>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="valueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
    </bean>

    <context:property-placeholder location="classpath:redis.properties" file-encoding="UTF-8"
                                  ignore-unresolvable="true"/>

    <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="database" value="${redis.dbbase}"/>
        <property name="password" value="${redis.pwd}"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>


    <!-- gensee redis cache -->
    <bean id="genseeRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="genseeJedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="valueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
    </bean>

    <bean id="genseeJedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pwd}"/>
        <property name="database" value="4"/>
    </bean>

    <!-- users redis cache -->
    <bean id="usersRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="genseeJedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="valueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="com.tssb.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
    </bean>

    <bean id="usersJedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pwd}"/>
        <property name="database" value="6"/>
    </bean>

    <!-- validate redis cache -->
    <bean id="validateRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="validateJedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <!--<property name="valueSerializer">
            <bean class="com.duia.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="com.duia.common.realm.DuiaGenericJackson2JsonRedisSerializer"/>
        </property>-->
    </bean>

    <bean id="validateJedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pwd}"/>
        <property name="database" value="5"/>
    </bean>

</beans>

